{"version":3,"file":"static/js/417.475fe64f.chunk.js","mappings":"iLAGaA,GAASC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oa,SCDrBC,EAAa,WACxB,OAAOC,EAAAA,EAAAA,KAACN,EAAM,CAACO,GAAG,IAAGC,SAAC,QACxB,E,6CCJO,SAASC,EAAaC,GAC3B,OAAIA,GAAU,IACLA,EAAOC,eAAe,SAExBD,CACT,C,uECAaE,EAAOX,EAAAA,EAAAA,GAASE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sbAOHS,E,m/GAWbC,EAAeb,EAAAA,EAAAA,IAAUc,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,kIASzBY,EAAQf,EAAAA,EAAAA,IAAUgB,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,wQAWlBc,EAAOjB,EAAAA,EAAAA,EAAQkB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,2MAYfJ,EAASC,EAAAA,EAAAA,OAAamB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,wV,SClD5B,I,IAAMiB,EAAa,SAAHC,GAAuB,IAADC,EAAhBC,EAASF,EAATE,UACnBC,EAAoCD,EAApCC,KAAMC,EAA8BF,EAA9BE,OAAQC,EAAsBH,EAAtBG,UAAWC,EAAWJ,EAAXI,OAEjCC,GAA4BC,EAAAA,EAAAA,WACD,QAAzBP,ECLG,SAA6BQ,GAClC,IAAMC,EAAYC,aAAaC,QAAQ,GAADC,OAAIJ,IAC1C,OAAOK,KAAKC,MAAML,EACpB,CDEIM,CAAoBb,UAAK,IAAAF,OAAA,EAAzBA,EAA2BgB,UAAU,GACtCC,GAAAC,EAAAA,EAAAA,GAAAZ,EAAA,GAFMU,EAAMC,EAAA,GAAEE,EAASF,EAAA,GAGxBG,GAAwCb,EAAAA,EAAAA,UAAS,WAAUc,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAApDE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAAgDjB,EAAAA,EAAAA,UAASH,GAAUqB,GAAAP,EAAAA,EAAAA,GAAAM,EAAA,GAA5DE,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,IAM5CG,EAAAA,EAAAA,YAAU,WClBL,IAA6BpB,EAAKqB,EAALrB,EDmBZN,ECnBiB2B,EDmBX,CAAEb,OAAAA,GClB9BN,aAAaoB,QAAQ,GAADlB,OAAIJ,GAAOK,KAAKkB,UAAUF,IDoB5CF,EAAoBX,EAASZ,EAAY,EAAIA,GAE7CmB,EAAgBP,EAAS,UAAY,UACvC,GAAG,CAACd,EAAMc,EAAQZ,IAElB,IAAM4B,EAAiB9C,EAAaiB,GAC9B8B,EAAoB/C,EAAawC,GAEvC,OACEQ,EAAAA,EAAAA,MAAC7C,EAAI,CAAAJ,SAAA,EACHF,EAAAA,EAAAA,KAACQ,EAAY,CAAAN,UACXF,EAAAA,EAAAA,KAACU,EAAK,CAAC0C,IAAK9B,EAAQ+B,IAAKlC,EAAMmC,MAAM,OAAOC,OAAO,YAErDJ,EAAAA,EAAAA,MAACvC,EAAI,CAAAV,SAAA,CAAE+C,EAAe,cACtBE,EAAAA,EAAAA,MAACvC,EAAI,CAAAV,SAAA,CAAEgD,EAAkB,iBACzBlD,EAAAA,EAAAA,KAACN,EAAM,CACL8D,KAAK,SACLC,QAxBe,WACnBrB,GAAU,SAAAsB,GAAS,OAAKA,CAAS,GACnC,EAuBMC,MAAO,CAAEC,gBAAiBrB,GAAerC,SAExC+B,EAAS,YAAc,aAIhC,E,SEzCO,SAAe4B,IAAW,OAAAC,EAAAC,MAAC,KAADC,UAAA,CAShC,SAAAF,IAAA,OAAAA,GAAAG,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MATM,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAR,UAAA,OAAAE,EAAAA,EAAAA,KAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAIH,OAHIP,EAAS,IAAIQ,gBAAgB,CACjCC,KAFkCN,EAAAO,OAAA,QAAAC,IAAAR,EAAA,GAAAA,EAAA,GAAG,EAGrCS,MAAO,IACPP,EAAAE,KAAA,EAEqBM,EAAAA,EAAAA,IAAU,UAADrD,OAAWwC,IAAU,KAAD,EAAxC,OAAwCC,EAAAI,EAAAS,KAA5CZ,EAAID,EAAJC,KAAIG,EAAAU,OAAA,SAELb,GAAI,wBAAAG,EAAAW,OAAA,GAAAjB,EAAA,KACZN,EAAAC,MAAA,KAAAC,UAAA,CAXDkB,EAAAA,EAAAA,SAAAA,QAAyB,qDCAlB,IAAMI,EAAO3F,EAAAA,EAAAA,GAASE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kHAQhByF,EAAiB5F,EAAAA,EAAAA,OAAac,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,+W,SCL9B0F,EAAa,WACxB,IAAAjE,GAAiCC,EAAAA,EAAAA,UAAS,MAAKU,GAAAC,EAAAA,EAAAA,GAAAZ,EAAA,GAAxCL,EAASgB,EAAA,GAAEuD,EAAWvD,EAAA,GAC7BG,GAAwBb,EAAAA,EAAAA,UAAS,GAAEc,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAA5ByC,EAAIxC,EAAA,GAAEoD,EAAOpD,EAAA,GAoBpB,OAdAO,EAAAA,EAAAA,YAAU,WACqB,SAAA8C,IAS5B,OAT4BA,GAAA1B,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAA7B,SAAAC,IAAA,IAAAwB,EAAA,OAAA1B,EAAAA,EAAAA,KAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEyBf,EAAYiB,GAAM,KAAD,EAA1B,GAANc,EAAMlB,EAAAS,KACC,IAATL,EAAU,CAAAJ,EAAAE,KAAA,QACwC,OAApDa,GAAY,SAAA/B,GAAS,SAAA7B,QAAAgE,EAAAA,EAAAA,GAAQnC,IAASmC,EAAAA,EAAAA,GAAKD,GAAM,IAAGlB,EAAAU,OAAA,wBAAAV,EAAAU,OAAA,SAG/CK,EAAYG,IAAO,QAAAlB,EAAAC,KAAA,GAAAD,EAAAoB,GAAApB,EAAA,kCAAAA,EAAAW,OAAA,GAAAjB,EAAA,oBAE7BL,MAAA,KAAAC,UAAA,EAVc,WACc2B,EAAA5B,MAAC,KAADC,UAAA,CAU7B+B,EACF,GAAG,CAACjB,KAGF3B,EAAAA,EAAAA,MAAA6C,EAAAA,SAAA,CAAA9F,SAAA,CACGgB,GACClB,EAAAA,EAAAA,KAACsF,EAAI,CAAApF,SACFgB,EAAU+E,KAAI,SAAAjF,GAAA,IAAGkF,EAAElF,EAAFkF,GAAOC,GAAUC,EAAAA,EAAAA,GAAApF,EAAAqF,GAAA,OACjCrG,EAAAA,EAAAA,KAACe,EAAU,CAACmF,GAAIA,EAAIhF,UAAWiF,GAAiBD,EAAM,OAI1DlG,EAAAA,EAAAA,KAAA,MAAAE,SAAI,aAEI,IAAT4E,IACC9E,EAAAA,EAAAA,KAACuF,EAAc,CAAC/B,KAAK,SAASC,QA9BT,WACzBiC,GAAQ,SAAAhC,GAAS,OAAIA,EAAY,CAAC,GACpC,EA4BgExD,SAAC,gBAMnE,ECjCA,EATe,WACb,OACEiD,EAAAA,EAAAA,MAAA6C,EAAAA,SAAA,CAAA9F,SAAA,EACEF,EAAAA,EAAAA,KAACD,EAAU,KACXC,EAAAA,EAAAA,KAACwF,EAAU,MAGjB,C","sources":["components/BackButton/BackButton.styled.js","components/BackButton/BackButton.jsx","utils/formatNumber.js","components/TweetsItem/TweetsItem.styled.js","components/TweetsItem/TweetsItem.jsx","utils/LocalStorage.js","services/user-api.js","components/TweetsList/TweetsList.styled.js","components/TweetsList/TweetsList.jsx","pages/Tweets.jsx"],"sourcesContent":["import styled from '@emotion/styled';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Button = styled(Link)`\r\n  padding: 14px 28px;\r\n\r\n  width: 200px;\r\n  height: 50px;\r\n  margin-bottom: 20px;\r\n  margin-bottom: ;\r\n\r\n  background: #ebd8ff;\r\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\r\n  border-radius: 10px;\r\n\r\n  font-family: 'Montserrat';\r\n  font-weight: 600;\r\n  font-size: 18px;\r\n  line-height: 22px;\r\n  text-transform: uppercase;\r\n  text-align: center;\r\n  border: 2px solid #000000;\r\n  color: #373737;\r\n`;\r\n","import { Button } from './BackButton.styled';\r\n\r\nexport const BackButton = () => {\r\n  return <Button to=\"/\">Back</Button>;\r\n};\r\n","export function formatNumber(number) {\r\n  if (number >= 1000) {\r\n    return number.toLocaleString('en-US');\r\n  }\r\n  return number;\r\n}\r\n","import styled from '@emotion/styled';\r\nimport backgroundImage from '../../assets/images/background.png';\r\nimport logo from '../../assets/images/logo.png';\r\nimport pinkLine from '../../assets/images/pinkLine.png';\r\n\r\nexport const Item = styled.li`\r\n  position: relative;\r\n\r\n  width: 380px;\r\n  height: 460px;\r\n  padding-top: 284px;\r\n\r\n  background-image: url(${backgroundImage}), url(${logo}), url(${pinkLine}),\r\n    linear-gradient(114.99deg, #471ca9 -0.99%, #5736a3 54.28%, #4b2a99 78.99%);\r\n\r\n  background-repeat: no-repeat;\r\n  background-position: 36px 28px, 20px 20px, center, center;\r\n\r\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\r\n  border-radius: 20px;\r\n  text-align: center;\r\n`;\r\n\r\nexport const ImageWrapper = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  width: 80px;\r\n  height: 80px;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  display: block;\r\n  width: 80px;\r\n  height: 80px;\r\n  border-radius: 50%;\r\n  border: 9px solid #ebd8ff;\r\n  box-shadow: 0px 4.39163px 4.39163px rgba(0, 0, 0, 0.06),\r\n    inset 0px -2.19582px 4.39163px #ae7be3,\r\n    inset 0px 4.39163px 3.29372px #fbf8ff;\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  font-family: 'Montserrat';\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n  line-height: 24px;\r\n  color: #ebd8ff;\r\n  text-transform: uppercase;\r\n  :first-of-type {\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  padding: 14px 28px;\r\n\r\n  width: 196px;\r\n  height: 50px;\r\n  margin-top: 26px;\r\n\r\n  background: #ebd8ff;\r\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\r\n  border-radius: 10px;\r\n\r\n  font-family: 'Montserrat';\r\n  font-weight: 600;\r\n  font-size: 18px;\r\n  line-height: 22px;\r\n  text-transform: uppercase;\r\n  color: #373737;\r\n`;\r\n","import { formatNumber } from 'utils/formatNumber';\r\nimport { Button, Image, ImageWrapper, Item, Text } from './TweetsItem.styled';\r\nimport { useEffect, useState } from 'react';\r\nimport { getLocalStorageItem, setLocalStorageItem } from 'utils/LocalStorage';\r\n\r\nexport const TweetsItem = ({ usersData }) => {\r\n  const { user, tweets, followers, avatar } = usersData;\r\n\r\n  const [follow, setFollow] = useState(\r\n    getLocalStorageItem(user)?.follow || false\r\n  );\r\n  const [currentColor, setCurrentColor] = useState('#EBD8FF');\r\n  const [currentFollowers, setCurrentFollowers] = useState(followers);\r\n\r\n  const followToggle = () => {\r\n    setFollow(prevState => !prevState);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLocalStorageItem(user, { follow });\r\n\r\n    setCurrentFollowers(follow ? followers + 1 : followers);\r\n\r\n    setCurrentColor(follow ? '#5CD3A8' : '#EBD8FF');\r\n  }, [user, follow, followers]);\r\n\r\n  const formatedTweets = formatNumber(tweets);\r\n  const formatedFollowers = formatNumber(currentFollowers);\r\n\r\n  return (\r\n    <Item>\r\n      <ImageWrapper>\r\n        <Image src={avatar} alt={user} width=\"80px\" height=\"80px\" />\r\n      </ImageWrapper>\r\n      <Text>{formatedTweets} tweets</Text>\r\n      <Text>{formatedFollowers} followers</Text>\r\n      <Button\r\n        type=\"button\"\r\n        onClick={followToggle}\r\n        style={{ backgroundColor: currentColor }}\r\n      >\r\n        {follow ? 'Following' : 'Follow'}\r\n      </Button>\r\n    </Item>\r\n  );\r\n};\r\n","export function setLocalStorageItem(key, value) {\r\n  localStorage.setItem(`${key}`, JSON.stringify(value));\r\n}\r\n\r\nexport function getLocalStorageItem(key) {\r\n  const localData = localStorage.getItem(`${key}`);\r\n  return JSON.parse(localData);\r\n}\r\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://645941e14eb3f674df8b9d70.mockapi.io/api/v1';\r\n\r\nexport async function fetchTweets(page = 1) {\r\n  const params = new URLSearchParams({\r\n    page,\r\n    limit: 3,\r\n  });\r\n\r\n  const { data } = await axios.get(`/users?${params}`);\r\n\r\n  return data;\r\n}\r\n\r\nexport async function updateTweets(id, credentials) {\r\n  const { data } = await axios.patch(`/users/${id}}`, credentials);\r\n\r\n  return data;\r\n}\r\n","import styled from '@emotion/styled';\r\n\r\nexport const List = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 48px;\r\n`;\r\n\r\nexport const LoadMoreButton = styled.button`\r\n  padding: 14px 28px;\r\n\r\n  width: 200px;\r\n  height: 50px;\r\n  margin-top: 20px;\r\n\r\n  background: #ebd8ff;\r\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\r\n  border-radius: 10px;\r\n\r\n  font-family: 'Montserrat';\r\n  font-style: normal;\r\n  font-weight: 600;\r\n  font-size: 18px;\r\n  line-height: 22px;\r\n  text-transform: uppercase;\r\n  color: #373737;\r\n`;\r\n","import { TweetsItem } from 'components/TweetsItem/TweetsItem';\r\nimport { useEffect, useState } from 'react';\r\nimport { fetchTweets } from 'services/user-api';\r\nimport { List, LoadMoreButton } from './TweetsList.styled';\r\n\r\nexport const TweetsList = () => {\r\n  const [usersData, setUserData] = useState(null);\r\n  const [page, setPage] = useState(1);\r\n\r\n  const onLoadMoreBtnClick = () => {\r\n    setPage(prevState => prevState + 1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function fetchUsersData() {\r\n      try {\r\n        const result = await fetchTweets(page);\r\n        if (page !== 1) {\r\n          setUserData(prevState => [...prevState, ...result]);\r\n          return;\r\n        }\r\n        return setUserData(result);\r\n      } catch (error) {}\r\n    }\r\n    fetchUsersData();\r\n  }, [page]);\r\n\r\n  return (\r\n    <>\r\n      {usersData ? (\r\n        <List>\r\n          {usersData.map(({ id, ...otherProps }) => (\r\n            <TweetsItem id={id} usersData={otherProps} key={id} />\r\n          ))}\r\n        </List>\r\n      ) : (\r\n        <h2>No users</h2>\r\n      )}\r\n      {page !== 4 && (\r\n        <LoadMoreButton type=\"button\" onClick={onLoadMoreBtnClick}>\r\n          Load More\r\n        </LoadMoreButton>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { BackButton } from 'components/BackButton/BackButton';\r\nimport { TweetsList } from 'components/TweetsList/TweetsList';\r\n\r\nconst Tweets = () => {\r\n  return (\r\n    <>\r\n      <BackButton />\r\n      <TweetsList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tweets;\r\n"],"names":["Button","styled","Link","_templateObject","_taggedTemplateLiteral","BackButton","_jsx","to","children","formatNumber","number","toLocaleString","Item","backgroundImage","ImageWrapper","_templateObject2","Image","_templateObject3","Text","_templateObject4","_templateObject5","TweetsItem","_ref","_getLocalStorageItem","usersData","user","tweets","followers","avatar","_useState","useState","key","localData","localStorage","getItem","concat","JSON","parse","getLocalStorageItem","follow","_useState2","_slicedToArray","setFollow","_useState3","_useState4","currentColor","setCurrentColor","_useState5","_useState6","currentFollowers","setCurrentFollowers","useEffect","value","setItem","stringify","formatedTweets","formatedFollowers","_jsxs","src","alt","width","height","type","onClick","prevState","style","backgroundColor","fetchTweets","_fetchTweets","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","params","_yield$axios$get","data","_args","wrap","_context","prev","next","URLSearchParams","page","length","undefined","limit","axios","sent","abrupt","stop","List","LoadMoreButton","TweetsList","setUserData","setPage","_fetchUsersData","result","_toConsumableArray","t0","fetchUsersData","_Fragment","map","id","otherProps","_objectWithoutProperties","_excluded"],"sourceRoot":""}